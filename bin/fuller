#!/usr/bin/env node

"use strict";

var fs = require('fs');
var path = require('path');
var args = require('args');
var Fuller = require('../lib').Fuller;
var dontCare = require('../lib').dontCare;
var defaultOpts = require('../lib/defaults');

var planFile = path.join(process.cwd(), 'plan.js');
if (!fs.existsSync(planFile)) {
    console.log('Error: can\'t find a plan');
    process.exit(1);
}

var plan = require(planFile);

var task,
    runnedTask = false;

for(task in plan.tasks) {
    if(task !== 'dev') {
        defaultOpts.push({
            name: task,
            type: 'bool',
            defaultValue: false
        });
    }
}

for(task in plan) {
    if(dontCare.indexOf(task) === -1) {
        defaultOpts.push({
            name: task,
            type: 'bool',
            defaultValue: false
        });
    }
}

var options = args.Options.parse(defaultOpts);
try {
	var opt = args.parse(options);
} catch (err) {
	console.log(options.getHelp());
	process.exit(1);
}

var fuller = new Fuller(plan, opt);

for(task in plan.tasks) {
    if(task !== 'dev' && opt[task]) {
        plan.tasks[task](fuller, fuller.defaults);
        runnedTask = true;
    }
}

if(!runnedTask) {
    if(opt.watch) {
        fuller.build();
        fuller.watch();
    } else {
        fuller.build();
    }
}

