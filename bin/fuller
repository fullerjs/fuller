#!/usr/bin/env node

"use strict";

var fs = require('fs');
var path = require('path');
var args = require('args');
var Fuller = require('../lib');

var options = args.Options.parse([
    {
        name: 'plan',
        shortName: 'p',
        help: 'Plan file name',
        defaultValue: 'plan.json'
    },
    {
        name: 'js',
        shortName: 'j',
        type: 'bool',
        help: 'Compile js only',
        defaultValue: undefined
    },
    {
        name: 'css',
        shortName: 'c',
        type: 'bool',
        help: 'Compile css only',
        defaultValue: undefined
    },
    {
        name: 'dev',
        shortName: 'd',
        type: 'bool',
        help: 'Developer version (no minifing and compressions)',
    },
    {
        name: 'verbose',
        shortName: 'v',
        type: 'bool',
        help: 'Verbose mode',
    }
]);

try {
	var opt = args.parse(options);
} catch (err) {
    console.log(err);
	console.log(options.getHelp());
	process.exit(1);
}

var planFile = path.join(process.cwd(), opt.plan);
if (!fs.existsSync(planFile)) {
	console.log(options.getHelp());
	process.exit(1);
}
opt.plan = planFile;

if(opt.js) { opt.css = false; }
if(opt.css) { opt.js = false; }

var fuller = new Fuller(opt);
fuller.build();
