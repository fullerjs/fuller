#!/usr/bin/env node
'use strict';
require('dotenv').config();
const fs = require('fs');
const path = require('path');
const minimist = require('minimist');
const Fuller = require('../lib');
const defaultOpts = require('../lib/defaults');

const printHelp = function(opts) {
  opts.forEach(o => console.log(`  --${o.name}${ o.shortName ? ` -${o.shortName}` : '' } ${o.help}`));
}

const args = minimist(process.argv.slice(1));
if (args.h || args.help) {
  printHelp(defaultOpts);
  process.exit(1);
}

const options = defaultOpts.reduce((opts, opt) => {
  const value = args[opt.name] !== undefined ? args[opt.name] :
    args[opt.shortName] !== undefined ? args[opt.shortName] : opt.defaultValue;

  if (value !== undefined) {
    opts[opt.name] = value;
  }

  return opts;
}, {});

const planFile = path.join(process.cwd(), options.plan);
if (!fs.existsSync(planFile)) {
  console.log('Error: can\'t find a plan');
  process.exit(1);
}

const fuller = new Fuller(options);
process.on('SIGINT', () => fuller.stop());

